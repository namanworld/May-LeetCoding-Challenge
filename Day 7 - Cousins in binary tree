/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool isSibling(TreeNode* root, int x, int y){
        if(!root) return false;
        if((root->left && root->right) && ((root->left->val == x && root->right->val == y)|| (root->left->val == y && root->right->val == x))) return 1;
        else return isSibling(root->left, x, y) || isSibling(root->right, x, y);
    }
    
    int depth(TreeNode* root, int x, int lev){
        if(!root) return 0;
        if(root->val == x) return lev;
        int left = depth(root->left, x, lev+1);
        if(left!=0) return left;
        return depth(root->right, x, lev+1);
    }
    
    bool isCousins(TreeNode* root, int x, int y) {
        return depth(root, x, 1) == depth(root, y, 1) && !isSibling(root,x,y);
    }
};
